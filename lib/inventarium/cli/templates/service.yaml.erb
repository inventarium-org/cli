version: v0

# You need to provide only name and key fields, everything else can be empty
# For example, if you don't have documentation or environments you can add it later

# required
name: <%= payload[:name] %>
# required, should be unique for each service
key: <%= payload[:key] %>
description:
languages:
  -
repository_link:
tags:
  -

owner:
  team_or_developer_name:
  slack_channel:

service:
  # optional, can be (critical | normal | internal | experiment)
  # critical   - most important services, the company will lose money if that broke
  # normal     - important service
  # internal   - something internal
  # experiment - experimental, can be anything here
  classification: <%= payload[:classification] %>
  # optional, can be (adopt | hold | trial | in_development)
  # adopt - Services which we has high confidence in to serve our purpose
  # hold  - Services not recommended to be used.
  # trial - Services that we have seen work with success in project work to solve a real problem; first serious usage experience that confirms benefits and can uncover limitations.
  # in_development - Services which developers build right now.
  status: <%= payload[:status] %>

docs:
  api:
  maintenance:
  domain:

# You can add any count of environments and you can use any names instead production, like stage, demo, etc
environments:
  production:
    url:
    healthcheck_url:
    logs_url:
    error_tracker_url:
    tags:
      - test
      - specific gateway
    monitoring:
      # You can use any key-value objects here, like new_relic, grafana, etc
      something:

operations:
  ci_build_url:

communications:
    # type is reqired, can be (http | rpc | graphql | event-producer | event-consumer)
  - type:
    # reqired, can be anything like (service key | kafka | rabbitmq | etc)
    target:
    # optional, can be (critical | uncritical)
    criticality:
    # optional list, can be (topic name | queue name | rpc resource | rest resource | gqlschema name)
    resources:
      -
    # optional
    custom_data:
      # can be anything
      # events:
      #   - test-event
      # version: 2
